
<style>
    .mitosoft-spinner-container {
        z-index: 5000;
        width: 100vw;
        height: 100vh;
        color: white;
    }

    .mitosoft-spinner-overlay {
        position: fixed;
        top: 0;
        left: 0;
        background: rgba(0,0,0,0.9);
        z-index: 4000;
        width: 100%;
        height: 100%;
    }

    .mitosoft-overlay-spinner-top {
        height: @_top;
    }
</style>

@if (this.ShowSpinner)
{
    <div class="mitosoft-spinner-overlay">
        <div class="mitosoft-spinner-container">
            <div class="row">
                <div class="mitosoft-overlay-spinner-top" />
            </div>
            <div class="row">
                <div class="text-center">
                    <div class="spinner-border mitosoft-spinner mitosoft-overlay-spinner" role="status">
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@code {
    private string _top => $"{this.MarginTop.ToString()}rem";

    [Parameter]
    public int MarginTop { get; set; } = 8;

    [Parameter]
    public Action OnShow { get; set; }

    [Parameter]
    public Action OnHide { get; set; }

    protected bool ShowSpinner { get; set; }

    public virtual void Show()
    {
        if (this.ShowSpinner == false)
        {
            this.ShowSpinner = true;

            this.OnShow?.Invoke();

            this.InvokeAsync(StateHasChanged);
        }
    }

    public virtual void Hide()
    {
        if (this.ShowSpinner == true)
        {
            this.ShowSpinner = false;

            this.OnHide?.Invoke();

            this.InvokeAsync(StateHasChanged);
        }
    }
}